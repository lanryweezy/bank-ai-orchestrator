# Stage 1: Build the React application
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package.json and lock file
COPY package.json ./
COPY package-lock.json* ./
COPY bun.lockb* ./

# Install all dependencies (frontend and backend, then frontend build will use what it needs)
RUN npm install --ignore-scripts

# Copy the rest of the frontend application code
COPY . .
# Or, more specifically:
# COPY public ./public
# COPY src ./src
# COPY index.html .
# COPY vite.config.ts .
# COPY tsconfig.json .
# COPY tsconfig.app.json .
# COPY postcss.config.js .
# COPY tailwind.config.ts .
# COPY components.json .


# Build the frontend application
# The `build` script in package.json is `vite build`
RUN npm run build

# Stage 2: Serve the application with Nginx
FROM nginx:alpine

# Copy the build output from the builder stage to Nginx html directory
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy a custom Nginx configuration (optional, but good for SPAs)
# Create an nginx.conf file in the root or public directory if needed
# COPY nginx.conf /etc/nginx/conf.d/default.conf
# Example nginx.conf for SPAs:
# server {
#   listen 80;
#   server_name localhost;
#
#   root /usr/share/nginx/html;
#   index index.html;
#
#   location / {
#     try_files $uri $uri/ /index.html;
#   }
# }


# Expose port 80
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]
